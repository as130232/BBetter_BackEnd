package com.future.bbetter.schedule.model;
// Generated 2017/10/14 上午 11:25:08 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.ColumnDefault;

/**
 * CycleRule generated by hbm2java
 */
@Entity
@Table(name = "cycle_rule", catalog = "bbetter")
public class CycleRule implements java.io.Serializable {

	private Long cycleRuleId;
	private Schedule schedule;
	private int period;
	private int timePoint;
	private int isValid;
	private Date createdate;
	private Date updatedate;

	public CycleRule() {
	}

	public CycleRule(Schedule schedule, int period, int timePoint, int isValid) {
		this.schedule = schedule;
		this.period = period;
		this.timePoint = timePoint;
		this.isValid = isValid;
	}

	public CycleRule(Schedule schedule, int period, int timePoint, int isValid, Date createdate,
			Date updatedate) {
		this.schedule = schedule;
		this.period = period;
		this.timePoint = timePoint;
		this.isValid = isValid;
		this.createdate = createdate;
		this.updatedate = updatedate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "cycle_rule_id", unique = true, nullable = false)
	public Long getCycleRuleId() {
		return this.cycleRuleId;
	}

	public void setCycleRuleId(Long cycleRuleId) {
		this.cycleRuleId = cycleRuleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "schedule_id", nullable = false)
	public Schedule getSchedule() {
		return this.schedule;
	}

	public void setSchedule(Schedule schedule) {
		this.schedule = schedule;
	}

	@Column(name = "period", nullable = false)
	public int getPeriod() {
		return this.period;
	}

	public void setPeriod(int period) {
		this.period = period;
	}

	@Column(name = "time_point", nullable = false)
	public int getTimePoint() {
		return this.timePoint;
	}

	public void setTimePoint(int timePoint) {
		this.timePoint = timePoint;
	}

	@Column(name = "is_valid", nullable = false)
	@ColumnDefault("1")
	public int getIsValid() {
		return this.isValid;
	}

	public void setIsValid(int isValid) {
		this.isValid = isValid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdate", length = 19)
	public Date getCreatedate() {
		return this.createdate;
	}

	public void setCreatedate(Date createdate) {
		this.createdate = createdate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedate", length = 19)
	public Date getUpdatedate() {
		return this.updatedate;
	}

	public void setUpdatedate(Date updatedate) {
		this.updatedate = updatedate;
	}

}
